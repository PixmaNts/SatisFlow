use once_cell::sync::Lazy;
use serde::{Deserialize, Serialize};
use std::collections::HashMap;

use super::items::Item;

#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, Serialize, Deserialize)]
pub enum Recipe {
    AILimiter,
    AWESOMEShop,
    AWESOMESink,
    AdaptiveControlUnit,
    AlcladAluminumSheet,
    AlienDNACapsule,
    AlternateAdheredIronPlate,
    AlternateAlcladCasing,
    AlternateAutomatedMiner,
    AlternateAutomatedSpeedWiring,
    AlternateBiocoal,
    AlternateBoltedFrame,
    AlternateBoltedIronPlate,
    AlternateCastScrew,
    AlternateCateriumCircuitBoard,
    AlternateCateriumComputer,
    AlternateCateriumWire,
    AlternateCharcoal,
    AlternateCheapSilica,
    AlternateClassicBattery,
    AlternateCoatedCable,
    AlternateCoatedIronCanister,
    AlternateCoatedIronPlate,
    AlternateCokeSteelIngot,
    AlternateCompactedCoal,
    AlternateCompactedSteelIngot,
    AlternateCoolingDevice,
    AlternateCopperAlloyIngot,
    AlternateCopperRotor,
    AlternateCrystalBeacon,
    AlternateCrystalComputer,
    AlternateDilutedFuel,
    AlternateDilutedPackagedFuel,
    AlternateElectricMotor,
    AlternateElectrodeAluminumScrap,
    AlternateElectrodeCircuitBoard,
    AlternateElectromagneticConnectionRod,
    AlternateEncasedIndustrialPipe,
    AlternateFertileUranium,
    AlternateFineBlackPowder,
    AlternateFineConcrete,
    AlternateFlexibleFramework,
    AlternateFusedQuickwire,
    AlternateFusedWire,
    AlternateHeatExchanger,
    AlternateHeatFusedFrame,
    AlternateHeavyEncasedFrame,
    AlternateHeavyFlexibleFrame,
    AlternateHeavyOilResidue,
    AlternateInfusedUraniumCell,
    AlternateInstantPlutoniumCell,
    AlternateInstantScrap,
    AlternateInsulatedCable,
    AlternateInsulatedCrystalOscillator,
    AlternateIronAlloyIngot,
    AlternateIronWire,
    AlternateOCSupercomputer,
    AlternatePlasticSmartPlating,
    AlternatePlutoniumFuelUnit,
    AlternatePolyesterFabric,
    AlternatePolymerResin,
    AlternatePureAluminumIngot,
    AlternatePureCateriumIngot,
    AlternatePureCopperIngot,
    AlternatePureIronIngot,
    AlternatePureQuartzCrystal,
    AlternateQuickwireCable,
    AlternateQuickwireStator,
    AlternateRadioConnectionUnit,
    AlternateRadioControlSystem,
    AlternateRecycledPlastic,
    AlternateRecycledRubber,
    AlternateRigourMotor,
    AlternateRubberConcrete,
    AlternateSiliconCircuitBoard,
    AlternateSiliconHighSpeedConnector,
    AlternateSloppyAlumina,
    AlternateSolidSteelIngot,
    AlternateSteamedCopperSheet,
    AlternateSteelCanister,
    AlternateSteelCoatedPlate,
    AlternateSteelRod,
    AlternateSteelRotor,
    AlternateSteelScrew,
    AlternateSteeledFrame,
    AlternateStitchedIronPlate,
    AlternateSuperStateComputer,
    AlternateTurboBlendFuel,
    AlternateTurboElectricMotor,
    AlternateTurboHeavyFuel,
    AlternateTurboPressureMotor,
    AlternateUraniumFuelUnit,
    AlternateWetConcrete,
    AluminaSolution,
    AluminumCasing,
    AluminumIngot,
    AluminumScrap,
    Assembler,
    AssemblyDirectorSystem,
    AutomatedGate,
    AutomatedWiring,
    BasicWall1m,
    BasicWall4m,
    Battery,
    Beacon,
    BeamConnector,
    BeamConnectorDouble,
    BeamSupport,
    BigConcretePillar,
    BigFramePillar,
    BigMetalPillar,
    BigPillarSupport,
    BiomassAlienProtein,
    BiomassBurner,
    BiomassLeaves,
    BiomassMycelia,
    BiomassWood,
    BlackPowder,
    BladeRunners,
    Blender,
    BlockSignal,
    BlueprintDesigner,
    Cable,
    CandyCane,
    CateriumIngot,
    CatwalkCorner,
    CatwalkCrossing,
    CatwalkRamp,
    CatwalkStairs,
    CatwalkStraight,
    CatwalkTCrossing,
    CeilingLight,
    CenterDoorWall,
    Chainsaw,
    CircuitBoard,
    ClusterNobelisk,
    CoalGenerator,
    ColorCartridge,
    Computer,
    Concrete,
    Constructor,
    ConveyorBeltMk1,
    ConveyorBeltMk2,
    ConveyorBeltMk3,
    ConveyorBeltMk4,
    ConveyorBeltMk5,
    ConveyorCeilingMount,
    ConveyorLiftFloorHole,
    ConveyorLiftMk1,
    ConveyorLiftMk2,
    ConveyorLiftMk3,
    ConveyorLiftMk4,
    ConveyorLiftMk5,
    ConveyorMerger,
    ConveyorPole,
    ConveyorSplitter,
    ConveyorWallMount,
    ConveyorWallX1,
    ConveyorWallX2,
    ConveyorWallX3,
    CoolingSystem,
    CopperIngot,
    CopperPowder,
    CopperSheet,
    CraftBench,
    CrystalOscillator,
    CyberWagon,
    DisplaySign,
    DoubleRamp2m,
    DoubleRamp4m,
    DoubleRamp8m,
    DoubleWallOutletMk1,
    DoubleWallOutletMk2,
    DoubleWallOutletMk3,
    DownCornerRamp1m,
    DownCornerRamp2m,
    DownCornerRamp4m,
    Drone,
    DronePort,
    ElectricLocomotive,
    ElectromagneticControlRod,
    EmptyCanister,
    EmptyFluidTank,
    EmptyPlatform,
    EmptyPlatformWithCatwalk,
    EncasedIndustrialBeam,
    EncasedPlutoniumCell,
    EncasedUraniumCell,
    EquipmentWorkshop,
    Explorer,
    ExplosiveRebar,
    FICSMASGiftTree,
    FICSMASPowerLight,
    FICSMASSnowDispenser,
    FICSMASWreath,
    Fabric,
    FactoryCart,
    FloodLightTower,
    FluidBuffer,
    FluidFreightPlatform,
    Foundation1m,
    Foundation2m,
    Foundation4m,
    Foundry,
    FrameFloor,
    FrameFoundation,
    FrameRamp,
    FrameWall,
    FrameWindow,
    FreightCar,
    FreightPlatform,
    Fuel,
    FuelGenerator,
    FullFrameWindow,
    FusedModularFrame,
    GasFilter,
    GasMask,
    GasNobelisk,
    GateHoleWall,
    GeothermalGenerator,
    GiantFICSMASTree,
    GlassFrameFoundation,
    GoldenFactoryCart,
    Half1mFoundation,
    Half2mFoundation,
    Half4mFoundation,
    HatcherProtein,
    HazardStorageBox,
    HazmatSuit,
    HeatSink,
    HeavyModularFrame,
    HexFrameWindow,
    HighSpeedConnector,
    HogProtein,
    HomingRifleAmmo,
    HoverPack,
    Hypertube,
    HypertubeEntrance,
    HypertubeFloorHole,
    HypertubeSupport,
    HypertubeWallHole,
    HypertubeWallSupport,
    IndustrialFluidBuffer,
    IndustrialStorageContainer,
    InnerCornerExtension1m,
    InnerCornerExtension2m,
    InnerCornerExtension4m,
    InnerCornerQuarterPipe,
    InnerCornerRoof1m,
    InnerCornerRoof2m,
    InnerCornerRoof4m,
    InvDownCorner1m,
    InvDownCorner2m,
    InvDownCorner4m,
    InvRamp1m,
    InvRamp2m,
    InvRamp4m,
    InvRampWall1m,
    InvRampWall2m,
    InvRampWall4m,
    InvRampWall8m,
    InvUpCorner1m,
    InvUpCorner2m,
    InvUpCorner4m,
    InvertedFrameRamp,
    InvertedInnerCornerQuarterPipe,
    InvertedOuterCornerQuarterPipe,
    InvertedQuarterPipe,
    IodineInfusedFilter,
    IronIngot,
    IronPlate,
    IronRebar,
    IronRod,
    Jetpack,
    JumpPad,
    LabelSign2m,
    LabelSign3m,
    LabelSign4m,
    Ladder,
    LargeBillboard,
    LightsControlPanel,
    LiquidBiofuel,
    LookoutTower,
    MAM,
    MagneticFieldGenerator,
    Manufacturer,
    MedicalStorageBox,
    MetalBeam,
    MinerMk1,
    MinerMk2,
    MinerMk3,
    ModernRailing,
    ModularEngine,
    ModularFrame,
    Motor,
    NitricAcid,
    Nobelisk,
    NobeliskDetonator,
    NonFissileUranium,
    NuclearPasta,
    NuclearPowerPlant,
    NukeNobelisk,
    NutritionalInhaler,
    ObjectScanner,
    OilExtractor,
    OuterCornerExtension1m,
    OuterCornerExtension2m,
    OuterCornerExtension4m,
    OuterCornerQuarterPipe,
    OuterCornerRoof1m,
    OuterCornerRoof2m,
    OuterCornerRoof4m,
    PackagedAluminaSolution,
    PackagedFuel,
    PackagedHeavyOilResidue,
    PackagedLiquidBiofuel,
    PackagedNitricAcid,
    PackagedNitrogenGas,
    PackagedOil,
    PackagedSulfuricAcid,
    PackagedTurbofuel,
    PackagedWater,
    Packager,
    PaintedBeam,
    PanelWindow,
    Parachute,
    ParticleAccelerator,
    PathSignal,
    PersonalStorageBox,
    PetroleumCoke,
    PipelineFloorHole,
    PipelineJunctionCross,
    PipelineMk1,
    PipelineMk1NoIndicator,
    PipelineMk2,
    PipelineMk2NoIndicator,
    PipelinePumpMk1,
    PipelinePumpMk2,
    PipelineSupport,
    PipelineWallHole,
    PipelineWallSupport,
    Plastic,
    PlutoniumFuelRod,
    PlutoniumPellet,
    PortableMiner,
    PortraitSign,
    PowerLine,
    PowerPoleMk1,
    PowerPoleMk2,
    PowerPoleMk3,
    PowerShard1,
    PowerShard2,
    PowerShard5,
    PowerStorage,
    PowerSwitch,
    PowerTower,
    PowerTowerPlatform,
    PressureConversionCube,
    PriorityPowerSwitch,
    ProgrammableSplitter,
    ProteinInhaler,
    PulseNobelisk,
    QuarterPipe,
    QuartzCrystal,
    Quickwire,
    RadarTower,
    RadioControlUnit,
    Railway,
    Ramp1m,
    Ramp2m,
    Ramp4m,
    RampWall1m,
    RampWall2m,
    RampWall4m,
    RampWall8m,
    RebarGun,
    Refinery,
    ReinforcedIronPlate,
    ReinforcedWindow,
    ResidualFuel,
    ResidualPlastic,
    ResidualRubber,
    ResourceWellExtractor,
    ResourceWellPressurizer,
    Rifle,
    RifleAmmo,
    RoadBarrier,
    Roof1m,
    Roof2m,
    Roof4m,
    RoofFlat,
    Rotor,
    Rubber,
    Screw,
    ShatterRebar,
    SideDoorWall,
    Silica,
    SingleWindow,
    SmallBillboard,
    SmallConcretePillar,
    SmallFramePillar,
    SmallMetalPillar,
    SmallPillarSupport,
    SmartPlating,
    SmartSplitter,
    Smelter,
    SmokelessPowder,
    Snowman,
    SolidBiofuel,
    SpaceElevator,
    SpitterProtein,
    SquareSign05m,
    SquareSign1m,
    SquareSign2m,
    StackableConveyorPole,
    StackableHypertubeSupport,
    StackablePipelineSupport,
    StairsLeft,
    StairsRight,
    Stator,
    SteelBeam,
    SteelIngot,
    SteelPipe,
    StingerProtein,
    StorageContainer,
    StreetLight,
    StunRebar,
    SulfuricAcid,
    Supercomputer,
    TheHUB,
    TherapeuticInhaler,
    ThermalPropulsionRocket,
    TiltedConcaveWall4m,
    TiltedConcaveWall8m,
    TiltedCornerWall4m,
    TiltedCornerWall8m,
    TiltedWall4m,
    TiltedWall8m,
    Tractor,
    TrainStation,
    Truck,
    TruckStation,
    TurboMotor,
    TurboRifleAmmo,
    Turbofuel,
    UJellyLandingPad,
    UnpackageAluminaSolution,
    UnpackageFuel,
    UnpackageHeavyOilResidue,
    UnpackageLiquidBiofuel,
    UnpackageNitricAcid,
    UnpackageNitrogenGas,
    UnpackageOil,
    UnpackageSulfuricAcid,
    UnpackageTurbofuel,
    UnpackageWater,
    UpCornerRamp1m,
    UpCornerRamp2m,
    UpCornerRamp4m,
    UraniumFuelRod,
    Valve,
    VersatileFramework,
    VitaminInhaler,
    Wall1a,
    WallMountedFloodLight,
    WallOutletMk1,
    WallOutletMk2,
    WallOutletMk3,
    WaterExtractor,
    Wire,
    XenoBasher,
    XenoZapper,
    Zipline,
}

#[derive(Debug, Clone, Copy, PartialEq, Serialize)]
pub struct RecipeInfo {
    pub recipe: Recipe,
    pub name: &'static str,
    pub machine: crate::models::game_data::MachineType,
    pub inputs: &'static [(Item, f32)],
    pub outputs: &'static [(Item, f32)],
}

macro_rules! define_recipes {
    {
        $(
            $variant:ident => {
                name: $name:expr,
                machine: $machine:ident,
                inputs: [ $( ($in_item:ident, $in_qty:expr) ),* $(,)? ],
                outputs: [ $( ($out_item:ident, $out_qty:expr) ),* $(,)? ],
            }
        ),+ $(,)?
    } => {
        pub static RECIPE_INFOS: &[RecipeInfo] = &[
            $(
                RecipeInfo {
                    recipe: Recipe::$variant,
                    name: $name,
                    machine: crate::models::game_data::MachineType::$machine,
                    inputs: &[
                        $( (Item::$in_item, $in_qty), )*
                    ],
                    outputs: &[
                        $( (Item::$out_item, $out_qty), )*
                    ]
                },
            )+
        ];
    };
}

include!("recipes_data.inc");
recipe_data!(define_recipes);

static RECIPE_BY_NAME: Lazy<HashMap<&'static str, Recipe>> = Lazy::new(|| {
    let mut map = HashMap::with_capacity(RECIPE_INFOS.len());
    for info in RECIPE_INFOS {
        map.insert(info.name, info.recipe);
    }
    map
});

static RECIPE_INFO_BY_RECIPE: Lazy<HashMap<Recipe, &'static RecipeInfo>> = Lazy::new(|| {
    RECIPE_INFOS
        .iter()
        .map(|info| (info.recipe, info))
        .collect::<HashMap<Recipe, &'static RecipeInfo>>()
});

pub fn recipe_by_name(name: &str) -> Option<Recipe> {
    RECIPE_BY_NAME.get(name).copied()
}

pub fn recipe_name(recipe: Recipe) -> &'static str {
    recipe_info(recipe).name
}

pub fn recipe_info(recipe: Recipe) -> &'static RecipeInfo {
    RECIPE_INFO_BY_RECIPE
        .get(&recipe)
        .copied()
        .expect("recipe data missing")
}

pub fn all_recipes() -> &'static [RecipeInfo] {
    RECIPE_INFOS
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn recipe_lookup_roundtrip() {
        let recipe = recipe_by_name("AI Limiter").expect("recipe");
        assert_eq!(recipe, Recipe::AILimiter);
        assert_eq!(recipe_name(recipe), "AI Limiter");
        let info = recipe_info(recipe);
        assert_eq!(info.outputs[0].0, Item::AILimiter);
    }
}
